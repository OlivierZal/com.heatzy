name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  homey:
    name: Homey
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Install Dependencies
        run: npm ci
      - name: Build App # Compile TypeScript
        run: |
          echo '{}' > app.json
          mkdir locales
          npm run build

  npm-scripts:
    name: npm Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq
      - name: Bump Version
        run: |
          APP_VERSION=$(jq -r .version .homeycompose/app.json)
          jq ".version=\"$APP_VERSION\"" package.json > package.json.tmp
          mv package.json.tmp package.json
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Install Dependencies
        run: npm ci
      - name: Lint and Fix Errors
        run: npm run lint:fix
      - name: Format Code
        run: npm run format:fix
      - name: Commit Changes
        run: |
          git config --local user.name 'GitHub Actions'
          git config --local user.email 'actions@github.com'
          git add -A
          if ! git diff --cached --exit-code; then
            git commit -m "Code maintenance: bump version, update dependencies, lint & format"
            if [[ "${{ github.ref }}" == 'refs/heads/main' ]]; then
              echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
              BRANCH_NAME="maintenance-$(date +'%Y%m%d')"
              git checkout -b $BRANCH_NAME
              git push origin $BRANCH_NAME
              gh pr create --base main --head $BRANCH_NAME --title "Maintenance PR" --body "Automatic code maintenance: bump version, update dependencies, lint and format."
            else
              git pull origin ${{ github.head_ref }} --rebase
              git push origin HEAD:${{ github.head_ref }}
            fi
          else
            echo "No changes to commit."
          fi

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Install Dependencies
        run: npm ci
      - name: Scan Code
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dependabot:
    name: Dependabot
    needs: [homey, npm-scripts, sonarcloud]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Fetch Metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Auto-Merge
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
